#ifndef REFLECT_CPP26_UTILS_CONCEPTS_HPP
#define REFLECT_CPP26_UTILS_CONCEPTS_HPP

#include <type_traits>

namespace reflect_cpp26 {
#define REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT_P(category, prefix)  \
  template <class T>                                                    \
  concept category##_type = std::prefix##_##category##_v<T>;            \
  template <class T>                                                    \
  concept non_##category##_type = !std::prefix##_##category##_v<T>;

#define REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(category)  \
  REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT_P(category, is)

REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(abstract)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(aggregate)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(arithmetic)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(array)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(bounded_array)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(class)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(compound)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(empty)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(enum)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(final)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(function)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(fundamental)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(lvalue_reference)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(implicit_lifetime)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(member_function_pointer)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(member_object_pointer)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(member_pointer)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(object)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(pointer)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(polymorphic)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(reference)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(rvalue_reference)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(scalar)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(scoped_enum)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(unbounded_array)
REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT(union)

REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT_P(unique_object_representations, has)

#undef REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT
#undef REFLECT_CPP26_DEFINE_TYPE_CATEGORY_CONCEPT_P
} // namespace reflect_cpp26

#endif // REFLECT_CPP26_UTILS_CONCEPTS_HPP
